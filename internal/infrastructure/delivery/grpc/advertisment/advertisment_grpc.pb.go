// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.11
// source: protobuf/advertisment.proto

package advertisment_grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AdvertismentHandlerClient is the client API for AdvertismentHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AdvertismentHandlerClient interface {
	CreateAdvertisment(ctx context.Context, in *CreateAdvertismentInput, opts ...grpc.CallOption) (*CreateAdvertismentOutput, error)
}

type advertismentHandlerClient struct {
	cc grpc.ClientConnInterface
}

func NewAdvertismentHandlerClient(cc grpc.ClientConnInterface) AdvertismentHandlerClient {
	return &advertismentHandlerClient{cc}
}

func (c *advertismentHandlerClient) CreateAdvertisment(ctx context.Context, in *CreateAdvertismentInput, opts ...grpc.CallOption) (*CreateAdvertismentOutput, error) {
	out := new(CreateAdvertismentOutput)
	err := c.cc.Invoke(ctx, "/advertisment.AdvertismentHandler/CreateAdvertisment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdvertismentHandlerServer is the server API for AdvertismentHandler service.
// All implementations must embed UnimplementedAdvertismentHandlerServer
// for forward compatibility
type AdvertismentHandlerServer interface {
	CreateAdvertisment(context.Context, *CreateAdvertismentInput) (*CreateAdvertismentOutput, error)
	mustEmbedUnimplementedAdvertismentHandlerServer()
}

// UnimplementedAdvertismentHandlerServer must be embedded to have forward compatible implementations.
type UnimplementedAdvertismentHandlerServer struct {
}

func (UnimplementedAdvertismentHandlerServer) CreateAdvertisment(context.Context, *CreateAdvertismentInput) (*CreateAdvertismentOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAdvertisment not implemented")
}
func (UnimplementedAdvertismentHandlerServer) mustEmbedUnimplementedAdvertismentHandlerServer() {}

// UnsafeAdvertismentHandlerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AdvertismentHandlerServer will
// result in compilation errors.
type UnsafeAdvertismentHandlerServer interface {
	mustEmbedUnimplementedAdvertismentHandlerServer()
}

func RegisterAdvertismentHandlerServer(s grpc.ServiceRegistrar, srv AdvertismentHandlerServer) {
	s.RegisterService(&AdvertismentHandler_ServiceDesc, srv)
}

func _AdvertismentHandler_CreateAdvertisment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAdvertismentInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdvertismentHandlerServer).CreateAdvertisment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/advertisment.AdvertismentHandler/CreateAdvertisment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdvertismentHandlerServer).CreateAdvertisment(ctx, req.(*CreateAdvertismentInput))
	}
	return interceptor(ctx, in, info, handler)
}

// AdvertismentHandler_ServiceDesc is the grpc.ServiceDesc for AdvertismentHandler service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AdvertismentHandler_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "advertisment.AdvertismentHandler",
	HandlerType: (*AdvertismentHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAdvertisment",
			Handler:    _AdvertismentHandler_CreateAdvertisment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf/advertisment.proto",
}
