// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	context "context"

	usecase "github.com/bells307/adv-service/internal/usecase"
	mock "github.com/stretchr/testify/mock"
)

// CreateAdvertismentUseCase is an autogenerated mock type for the CreateAdvertismentUseCase type
type CreateAdvertismentUseCase struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1
func (_m *CreateAdvertismentUseCase) Execute(_a0 context.Context, _a1 usecase.CreateAdvertismentInput) (usecase.CreateAdvertismentOutput, error) {
	ret := _m.Called(_a0, _a1)

	var r0 usecase.CreateAdvertismentOutput
	if rf, ok := ret.Get(0).(func(context.Context, usecase.CreateAdvertismentInput) usecase.CreateAdvertismentOutput); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(usecase.CreateAdvertismentOutput)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, usecase.CreateAdvertismentInput) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewCreateAdvertismentUseCase interface {
	mock.TestingT
	Cleanup(func())
}

// NewCreateAdvertismentUseCase creates a new instance of CreateAdvertismentUseCase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCreateAdvertismentUseCase(t mockConstructorTestingTNewCreateAdvertismentUseCase) *CreateAdvertismentUseCase {
	mock := &CreateAdvertismentUseCase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
