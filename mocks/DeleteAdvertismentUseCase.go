// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	context "context"

	usecase "github.com/bells307/adv-service/internal/usecase"
	mock "github.com/stretchr/testify/mock"
)

// DeleteAdvertismentUseCase is an autogenerated mock type for the DeleteAdvertismentUseCase type
type DeleteAdvertismentUseCase struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1
func (_m *DeleteAdvertismentUseCase) Execute(_a0 context.Context, _a1 usecase.DeleteAdvertismentInput) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, usecase.DeleteAdvertismentInput) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewDeleteAdvertismentUseCase interface {
	mock.TestingT
	Cleanup(func())
}

// NewDeleteAdvertismentUseCase creates a new instance of DeleteAdvertismentUseCase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDeleteAdvertismentUseCase(t mockConstructorTestingTNewDeleteAdvertismentUseCase) *DeleteAdvertismentUseCase {
	mock := &DeleteAdvertismentUseCase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
